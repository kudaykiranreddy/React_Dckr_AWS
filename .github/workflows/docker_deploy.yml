name: Multi-Environment Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-app:latest .
        working-directory: To_do_app

      # Step 4: Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-app:latest

      # Step 5: Deploy to EC2
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_PUBLIC_IP }}
          USER: ec2-user
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            echo "🚀 Checking if Docker is installed..."
            if ! command -v docker &> /dev/null; then
                echo "⚡ Installing Docker..."
                sudo yum update -y
                sudo yum install -y docker
                sudo systemctl start docker
                sudo systemctl enable docker
                sudo usermod -aG docker ec2-user
                echo "✅ Docker installed successfully."
            else
                echo "✅ Docker is already installed."
            fi

            echo "🚀 Deploying the latest image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
            sudo docker stop todo-app || true
            sudo docker rm todo-app || true
            sudo docker run -d -p 80:80 --name todo-app ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
            echo "🎉 Deployment successful! Access the app at http://$HOST"
          EOF

  rollback-on-failure:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: failure()

    steps:
      - name: Configure SSH and Rollback
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_PUBLIC_IP }}
          USER: ec2-user
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            echo "🚨 Rolling back to previous version..."
            PREVIOUS_IMAGE=$(sudo docker images --format "{{.Repository}}:{{.Tag}}" | grep todo-app | sed -n 2p)
            if [ -n "$PREVIOUS_IMAGE" ]; then
                sudo docker stop todo-app || true
                sudo docker rm todo-app || true
                sudo docker run -d -p 80:3000 --name todo-app $PREVIOUS_IMAGE
                echo "✅ Rolled back to $PREVIOUS_IMAGE"
            else
                echo "❌ No previous image found. Rollback failed!"
                exit 1
            fi
          EOF
